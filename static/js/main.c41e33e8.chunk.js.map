{"version":3,"sources":["components/FriendElement.js","components/Pagination.js","components/App.js","reportWebVitals.js","index.js"],"names":["FriendElement","friendObject","onClickStar","onClickDelete","className","name","isStarred","onClick","Pagination","friendsListToShow","itemsPerPage","handlePageNumberClick","pageNumbers","i","Math","ceil","length","push","map","number","id","FriendsList","props","onChangeSearchText","e","value","target","setState","searchText","friendObj","friendNameToDelete","window","confirm","friendsList","state","filter","friendEle","starClickedfriend","action","newFriendsList","friend","event","currentPage","Number","onClickSort","sort","itemA","itemB","this","element","nameUpperCase","toUpperCase","searchTextUpperCase","indexOf","indexOfLastItem","indexOfFirstItem","currentItems","slice","type","placeholder","onChange","index","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c41e33e8.chunk.js","sourcesContent":["import React from 'react'\nimport { RiDeleteBin6Line } from 'react-icons/ri'\nimport { AiFillStar, AiOutlineStar } from 'react-icons/ai'\n\nconst FriendElement = ({ friendObject, onClickStar, onClickDelete }) => {\n  return (\n    <div className='friend-wrapper'>\n      <div className='friend-name-wrapper'>\n        <div className='friend-name'>{friendObject.name}</div>\n        <div className='friend-help-text'> is your friend</div>\n      </div>\n      <div className='actions'>\n        {friendObject.isStarred ? (\n          <AiFillStar\n            className='star filled'\n            onClick={() => {\n              onClickStar(friendObject, 'unstar')\n            }}\n          />\n        ) : (\n          <AiOutlineStar\n            className='star'\n            onClick={() => {\n              onClickStar(friendObject, 'star')\n            }}\n          />\n        )}\n        <RiDeleteBin6Line\n          className='delete'\n          onClick={() => {\n            onClickDelete(friendObject)\n          }}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default FriendElement\n","import React from 'react'\n\nconst Pagination = ({\n  friendsListToShow,\n  itemsPerPage,\n  handlePageNumberClick,\n}) => {\n\n  const pageNumbers = []\n  for (\n    let i = 1;\n    i <= Math.ceil(friendsListToShow.length / itemsPerPage);\n    i++\n  ) {\n    pageNumbers.push(i)\n  }\n\n  return pageNumbers.map((number) => {\n    return (\n      <div\n        className='pagination-number'\n        key={number}\n        id={number}\n        onClick={handlePageNumberClick}\n      >\n        {number}\n      </div>\n    )\n  })\n}\n\nexport default Pagination\n","import { Component } from 'react'\nimport '../styles/App.css'\nimport FriendElement from './FriendElement'\nimport Pagination from './Pagination'\n\nclass FriendsList extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      friendsList: [],\n      searchText: '',\n      currentPage: 1,\n      itemsPerPage: 4,\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      friendsList: [\n        { name: 'Janice Shepherd', isStarred: true },\n        { name: 'Shiba Lopex', isStarred: false },\n        { name: 'Botez Alex', isStarred: true },\n        { name: 'John Doe', isStarred: true },\n        { name: 'Jane Doe', isStarred: false },\n        { name: 'Chloe Barnes', isStarred: true },\n        { name: 'Rocket Alex', isStarred: false },\n        { name: 'Thor', isStarred: true },\n        { name: 'Thanos was right', isStarred: true },\n      ],\n    })\n  }\n\n  onChangeSearchText = (e) => {\n    const { value } = e.target\n    this.setState({\n      searchText: value,\n    })\n  }\n\n  onClickDelete = (friendObj) => {\n    const { name: friendNameToDelete } = friendObj\n\n    const doDelete = window.confirm(\n      `Are you sure you want to delete ${friendNameToDelete}?`\n    )\n    if (doDelete) {\n      const { friendsList } = this.state\n\n      this.setState({\n        friendsList: friendsList.filter(\n          (friendEle) => friendEle.name !== friendNameToDelete\n        ),\n      })\n    }\n  }\n\n  onClickStar = (starClickedfriend, action) => {\n    const { friendsList } = this.state\n\n    const newFriendsList = friendsList.map((friend) => {\n      if (friend.name === starClickedfriend.name) {\n        friend.isStarred = action === 'star'\n      }\n\n      return friend\n    })\n    this.setState({\n      friendsList: newFriendsList,\n    })\n  }\n\n  handlePageNumberClick = (event) => {\n    this.setState({\n      currentPage: Number(event.target.id),\n    })\n  }\n\n  onClickSort = () => {\n    const { friendsList } = this.state\n    \n    let newFriendsList = friendsList.sort((itemA, itemB) => {\n      \n      return itemA.isStarred && !itemB.isStarred ? -1 : !itemA.isStarred && itemB.isStarred? 1 : 0\n    })\n  \n    this.setState({\n      friendsList: newFriendsList\n    })\n  }\n\n  render() {\n    const { friendsList, searchText, currentPage, itemsPerPage } = this.state\n\n    const friendsListToShow = friendsList.filter((element) => {\n      const nameUpperCase = element.name.toUpperCase()\n      const searchTextUpperCase = searchText.toUpperCase()\n\n      return nameUpperCase.indexOf(searchTextUpperCase) !== -1\n    })\n\n    // Logic for displaying friendsListToShow\n    const indexOfLastItem = currentPage * itemsPerPage\n    const indexOfFirstItem = indexOfLastItem - itemsPerPage\n    const currentItems = friendsListToShow.slice(\n      indexOfFirstItem,\n      indexOfLastItem\n    )\n\n    return (\n      <div className='main-content-wrapper'>\n        <div className='header'>Friends List</div>\n        <div className='input-wrapper'>\n          <input\n            type='text'\n            placeholder=\"Enter your friend's name\"\n            value={searchText}\n            onChange={this.onChangeSearchText}\n          />\n        </div>\n        <div className='friend-list-wrapper'>\n          {currentItems.map((friend, index) => {\n            return (\n              <FriendElement\n                key={index}\n                friendObject={friend}\n                onClickStar={this.onClickStar}\n                onClickDelete={this.onClickDelete}\n              />\n            )\n          })}\n\n          <div className='footer-wrapper'>\n            <div className='pagination-wrapper'>\n              <Pagination\n                friendsListToShow={friendsListToShow}\n                itemsPerPage={itemsPerPage}\n                handlePageNumberClick={this.handlePageNumberClick}\n              />\n            </div>\n\n            <div className='sort-wrapper'>\n              <input type=\"button\" value=\"Sort by Favourites\" onClick={this.onClickSort}/>\n            </div>\n          </div>\n          {friendsListToShow.length === 0 && <div>No friends found!</div>}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport { FriendsList }\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {FriendsList} from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <FriendsList />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}